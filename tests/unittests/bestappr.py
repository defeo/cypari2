# -*- coding: utf-8 -*-
# This file was generated by tests_generator.py
# Generated the 09/19/2017

"""Original pari/GP test file bestappr :
bestappr(-1./7, 7)
bestappr(-1./7, 6)
bestappr(Mod(-1/7,100))
bestappr(Mod(-1/7,100), 6)
bestappr(Mod(-1/7,100), 7)
bestappr(-1/7 + O(5^10))
bestappr(-1/7 + O(5^10), 6)
type( bestappr(1+0.*I) )

bestapprPade((x^3+1)/(x^10+2))
bestapprPade((x^3+1)/(x^10+2), 4)
bestapprPade(1/(1+x+O(x^10)))
bestapprPade(1/(1+x+O(x^10)), 5)
bestapprPade(1/(1+x^6+O(x^13)), 5)
bestapprPade(1/(1+x^6+O(x^13)))
bestapprPade(Mod(x^3+x^2+x+1, x^5-2))
bestapprPade(x^2+x^3+x^4+O(x^5))
bestapprPade(x^-4+x^-3+x^-2+O(x^-1))
bestapprPade(x^10/(1-x)^11+O(x^22))
"""
import unittest
import cypari2

pari = cypari2.Pari()


class TestBestappr(unittest.TestCase):
    def test_bestappr(self):
        self.assertEquals(pari.bestappr(-1./7, 7), '-1/7')
        self.assertEquals(pari.bestappr(-1./7, 6), '-1/6')
        self.assertEquals(pari.bestappr(pari.Mod('-1/7', 100)), '-1/7')
        self.assertEquals(pari.bestappr(pari.Mod('-1/7', 100), 6), '[]')
        self.assertEquals(pari.bestappr(pari.Mod('-1/7', 100), 7), '-1/7')
        self.assertEquals(pari.bestappr('-1/7 + O(5^10)'), '-1/7')
        self.assertEquals(pari.bestappr('-1/7 + O(5^10)', 6), '[]')
        self.assertEquals(pari.type( pari.bestappr('1+0.*I')), '"t_INT"')
        self.assertEquals(pari.bestapprPade('(x^3+1)/(x^10+2)'), '(x^3 + 1)/(x^10 + 2)')
        self.assertEquals(pari.bestapprPade('(x^3+1)/(x^10+2)', 4), '1/2*x^3 + 1/2')
        self.assertEquals(pari.bestapprPade('1/(1+x+O(x^10))'), '1/(x + 1)')
        self.assertEquals(pari.bestapprPade('1/(1+x+O(x^10))', 5), '1/(x + 1)')
        self.assertEquals(pari.bestapprPade('1/(1+x^6+O(x^13))', 5), '[]')
        self.assertEquals(pari.bestapprPade('1/(1+x^6+O(x^13))'), '1/(x^6 + 1)')
        self.assertEquals(pari.bestapprPade(pari.Mod('x^3+x^2+x+1', 'x^5-2')), '(x - 2)/(-x^2 + x)')
        self.assertEquals(pari.bestapprPade('x^2+x^3+x^4+O(x^5)'), 'x^2/(-x + 1)')
        self.assertEquals(pari.bestapprPade('x^-4+x^-3+x^-2+O(x^-1)'), '1/(-x^5 + x^4)')
        self.assertEquals(pari.bestapprPade('x^10/(1-x)^11+O(x^22)'), """x^10/(-x^11 + 11*x^10 - 55*x^9 + 165*x^8 - 
                330*x^7 + 462*x^6 - 462*x^5 + 330*x^4 - 165*x^3 + 55*x^2 - 11*x + 1)""")

""" **** Expected results ****

-1/7
-1/6
-1/7
[]
-1/7
-1/7
[]
"t_INT"
(x^3 + 1)/(x^10 + 2)
1/2*x^3 + 1/2
1/(x + 1)
1/(x + 1)
[]
1/(x^6 + 1)
(x - 2)/(-x^2 + x)
x^2/(-x + 1)
1/(-x^5 + x^4)
x^10/(-x^11 + 11*x^10 - 55*x^9 + 165*x^8 - 330*x^7 + 462*x^6 - 462*x^5 + 330
*x^4 - 165*x^3 + 55*x^2 - 11*x + 1)

"""
