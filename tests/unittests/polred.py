# -*- coding: utf-8 -*-
# Created 09/26/2017

"""Original pari/GP test file polred :
rnfpolredbest(nfinit(quadpoly(5,y)),x^7-14*x^5+56*x^3-56*x+22)
\\ rnfpolred(nfinit(quadpoly(1996,y)),quadray(1996,1))
\\ rnfpolred(nfinit(quadpoly(904,y)),quadray(904,1))
K=nfinit(quadpoly(29,y)); T=quadray(29,17)
rnfpolredabs(K,T)
rnfpolredbest(K,T)
rnfpolredabs(K,[T,100],16)
rnfpolredbest(K,[T,100])
K=nfinit(y^3-y-1); T=x^3-x-1;
rnfpolredabs(K,T)
rnfpolredabs(K,T,2)
[P,a]=rnfpolredbest(K,T,1);
subst(K.pol,y,a)
[P,a,b]=rnfpolredbest(K,T,3);
subst(K.pol,y,a)
substvec(T,[x,y],[a,b])
rnfpolred(nfinit(quadpoly(1129,y)),quadray(1129,1));

nfinit(Pol([256,-2560,5120,6400,-60320,6976,116320,72560,-456615,270630,-129362]));
polredabs(quadpoly(14586217464))
{
p=x^32 - 1680*x^30 + 1026480*x^28 - 289096080*x^26 + 39933334980*x^24 -
2715474610800*x^22 + 88886222283600*x^20 - 1619990314513200*x^18 +
17928141864081750*x^16 - 125620995771054000*x^14 + 565267786831818000*x^12 -
1629524362237758000*x^10 + 2978275448322310500*x^8 - 3393290168363970000*x^6 +
2319247705779270000*x^4 - 866101453967610000*x^2 + 135345425000900625;
#polredabs(p,4)
}
polredabs(x^12+139968*x^10+24814646784*x^8+1854249948463104*x^6+177954917169813848064*x^4-1827912356210202139164672*x^2+68504919608701082757419237376);
polredabs(x^4+10^21*x^2+1)
polredabs(x^4+146077*x^2+2629386)
\\#1146
polredabs(x^9-4*x^7-3*x^6+9*x^5+8*x^4-6*x^3-9*x^2-4*x-1)
\\#1228
polredabs(x^5-13*x^3+3*x^2+5*x-1)
\\#1229
polredabs(x^6+21471450*x^2+71643071500)
polredbest(x^6+21471450*x^2+71643071500)
polredbest(4*x^4+146077*x^2+2629386)

polredabs(2*x+1)
polredabs(2*x+1,1)
polred([x,[1]])
polred(2*x+1)
polred(2*x+1,1)
polred(4*x^2+1,2)
polredbest(2*x+1)
polredbest(2*x+1,1)
polredbest(4*x^2+1,1)
polredord(2*x+1)
polredord(4*x^2+1)
\\ #1519, test T->unscale != 1
polredbest(x^8+24*x^6+80*x^5+1040*x^4-4288*x^3-12736*x^2-61952*x+311296,1)
\\ #1511
polredabs(x^16-4*x^15-334*x^14+264*x^13+32231*x^12+57392*x^11-1031422*x^10-3628868*x^9+7185297*x^8+42417784*x^7+11283472*x^6-137773504*x^5-127243504*x^4+69059728*x^3+56307944*x^2-6264432*x+6436)
\\ #1653
default(parisize, 3<<23);
f=x^40+10*x^39+75*x^38+410*x^37+1888*x^36+7364*x^35+25310*x^34+77140*x^33+211669*x^32+524946*x^31+1183823*x^30+2430610*x^29+4548530*x^28+7743916*x^27+11954920*x^26+16627228*x^25+20626386*x^24+22445616*x^23+20835590*x^22+15611648*x^21+8209812*x^20+1290846*x^19-2562740*x^18-2525172*x^17-76374*x^16+2095346*x^15+2320830*x^14+1050748*x^13-71120*x^12-238080*x^11+31952*x^10+106808*x^9+12549*x^8-18470*x^7-485*x^6+3202*x^5-232*x^4-430*x^3+150*x^2-20*x+1;
polredbest(f);
polredabs(x^5 - 331137220*x^4 + 37922047405356360*x^3 - 1127174691845938128093840*x^2 + 52208293424667465123438066822480*x - 16507431553557006099641796204889368224)

f=5*x^12+13*x^4+11*x^3+2*x+1;
[g,h] = polredabs(f,1); [g,subst(f,x,h)]
"""
import unittest
from cypari2 import Pari, PariError

pari = Pari()


class TestPolred(unittest.TestCase):
    def test_polred(self):
        y = pari('y')
        x = pari('x')
        self.assertEquals(
            pari.rnfpolredbest(pari.nfinit(pari.quadpoly(5, y)), x ** 7 - 14 * x ** 5 + 56 * x ** 3 - 56 * x + 22),
            'x^7 + Mod(7*y, y^2 - y - 1)*x^6 + Mod(21*y + 7, y^2 - y - 1)*x^5 + 35*x^4 + Mod(-35*y - ' +
            '14, y^2 - y - 1)*x^3 + Mod(-7*y - 77, y^2 - y - 1)*x^2 + Mod(14*y + 7, y^2 - y - 1)*x + ' +
            'Mod(-y + 44, y^2 - y - 1)')
        # \\ pari.rnfpolred(pari.nfinit(pari.quadpoly(1996,y)),pari.quadray(1996,1))
        # \\ pari.rnfpolred(pari.nfinit(pari.quadpoly(904,y)),pari.quadray(904,1))
        K = pari.nfinit(pari.quadpoly(29, y));
        T = pari.quadray(29, 17)
        self.assertEquals(T,
                          'x^8 + Mod(-5265231366756*y - 11544453645457, y^2 - y - 7)*x^7 + Mod(28411458541660742678' +
                          '6*y + 622944640581258439174, y^2 - y - 7)*x^6 + Mod(-88698486784831757442657946*y - 1944' +
                          '78741347464554095950854, y^2 - y - 7)*x^5 + Mod(1457861838374320941446687517087*y + 3196' +
                          '482213651741289611519839129, y^2 - y - 7)*x^4 + Mod(-3466536016262523445329224834043387*' +
                          'y - 7600665870589330277066596588522840, y^2 - y - 7)*x^3 + Mod(5000592518487564664208359' +
                          '83321373618*y + 1096421116344588264250099626740668170, y^2 - y - 7)*x^2 + Mod(-191620894' +
                          '46215341153510282273347908836*y - 42014460135353505823787366140454468112, y^2 - y - 7)*x' +
                          ' + Mod(100691810991091652032034511974871062155*y + 2207750929623871787473021021190225896' +
                          '88, y^2 - y - 7)')
        self.assertEquals(pari.rnfpolredabs(K, T),
                          'x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mod(-385*y - 2' +
                          '51, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(-2451*y - 3350, y^2 - y ' +
                          '- 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod(-2050*y - 3861, y^2 - y - 7)*x + Mo' +
                          'd(565*y + 1331, y^2 - y - 7)')
        self.assertEquals(pari.rnfpolredbest(K, T),
                          'x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mod(-385*y - 2' +
                          '51, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(-2451*y - 3350, y^2 - y ' +
                          '- 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod(-2050*y - 3861, y^2 - y - 7)*x + Mo' +
                          'd(565*y + 1331, y^2 - y - 7)')
        self.assertEquals(pari.rnfpolredabs(K, [T, 100], 16),
                          'x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mod(-385*y - 2' +
                          '51, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(-2451*y - 3350, y^2 - y ' +
                          '- 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod(-2050*y - 3861, y^2 - y - 7)*x + Mo' +
                          'd(565*y + 1331, y^2 - y - 7)')
        self.assertEquals(pari.rnfpolredbest(K, [T, 100]),
                          'x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mod(-385*y - 2' +
                          '51, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(-2451*y - 3350, y^2 - y ' +
                          '- 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod(-2050*y - 3861, y^2 - y - 7)*x + Mo' +
                          'd(565*y + 1331, y^2 - y - 7)')
        K = pari.nfinit(y ** 3 - y - 1);
        T = x ** 3 - x - 1;
        self.assertEquals(pari.rnfpolredabs(K, T),
                          'x^3 + Mod(y^2 - 2, y^3 - y - 1)*x^2 + Mod(-y + 1, y^3 - y - 1)*x + Mod(y - 1, y^3 - y - ' +
                          '1)')
        self.assertEquals(pari.rnfpolredabs(K, T, 2),
                          'x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1')
        [P, a] = pari.rnfpolredbest(K, T, 1);
        self.assertEquals(pari.subst(K[0], y, a),
                          'Mod(0, x^3 + Mod(y^2 - y - 2, y^3 - y - 1)*x^2 + Mod(-y^2 + y + 1, y^3 - y - 1)*x + Mod(' +
                          'y^2, y^3 - y - 1))')
        [P, a, b] = pari.rnfpolredbest(K, T, 3);
        self.assertEquals(pari.subst(K[0], y, a),
                          'Mod(0, x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1)')
        self.assertEquals(pari.substvec(T, [x, y], [a, b]),
                          'Mod(0, x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1)')
        pari.rnfpolred(pari.nfinit(pari.quadpoly(1129, y)), pari.quadray(1129, 1));

        pari.nfinit(pari.Pol([256, -2560, 5120, 6400, -60320, 6976, 116320, 72560, -456615, 270630, -129362]));
        self.assertEquals(pari.polredabs(pari.quadpoly(14586217464)), 'x^2 - 3646554366')
        p = x ** 32 - 1680 * x ** 30 + 1026480 * x ** 28 - 289096080 * x ** 26 + 39933334980 * x ** 24 - \
            2715474610800 * x ** 22 + 88886222283600 * x ** 20 - 1619990314513200 * x ** 18 + 17928141864081750 * x \
            ** 16 - 125620995771054000 * x ** 14 + 565267786831818000 * x ** 12 - 1629524362237758000 * x ** 10 + \
            2978275448322310500 * x ** 8 - 3393290168363970000 * x ** 6 + 2319247705779270000 * x ** 4 - \
            866101453967610000 * x ** 2 + 135345425000900625;
        self.assertEquals(len(pari.polredabs(p,4)), 304)
        pari.polredabs(
            x ** 12 + 139968 * x ** 10 + 24814646784 * x ** 8 + 1854249948463104 * x ** 6 + 177954917169813848064 * x
            ** 4 - 1827912356210202139164672 * x ** 2 + 68504919608701082757419237376);
        self.assertEquals(pari.polredabs(x ** 4 + 10 ** 21 * x ** 2 + 1), 'x^4 + 1000000000000000000000*x^2 + 1')
        self.assertEquals(pari.polredabs(x ** 4 + 146077 * x ** 2 + 2629386), 'x^4 + 146077*x^2 + 2629386')
        # #1146
        self.assertEquals(pari.polredabs(
            x ** 9 - 4 * x ** 7 - 3 * x ** 6 + 9 * x ** 5 + 8 * x ** 4 - 6 * x ** 3 - 9 * x ** 2 - 4 * x - 1),
            'x^9 - 4*x^7 - 3*x^6 + 9*x^5 + 8*x^4 - 6*x^3 - 9*x^2 - 4*x - 1')
        # #1228
        self.assertEquals(pari.polredabs(x ** 5 - 13 * x ** 3 + 3 * x ** 2 + 5 * x - 1),
                          'x^5 - 13*x^3 - 3*x^2 + 5*x + 1')
        # #1229
        self.assertEquals(pari.polredabs(x ** 6 + 21471450 * x ** 2 + 71643071500), 'x^6 + 21471450*x^2 + 71643071500')
        self.assertEquals(pari.polredbest(x ** 6 + 21471450 * x ** 2 + 71643071500),
                          'x^6 - 12*x^4 - 24*x^3 + 21651666*x^2 - 257657256*x + 71814482884')
        self.assertEquals(pari.polredbest(4 * x ** 4 + 146077 * x ** 2 + 2629386), 'x^4 + 146077*x^2 + 10517544')

        self.assertEquals(pari.polredabs(2 * x + 1), 'x')
        self.assertEquals(pari.polredabs(2 * x + 1, 1), '[x, Mod(-1/2, x)]')
        with self.assertRaises(PariError) as context:
            pari.polred([x, [1]])
        self.assertTrue('domain error in gvaluation: p = 1' in str(context.exception))
        self.assertEquals(pari.polred(2 * x + 1), '[x - 1]')
        self.assertEquals(pari.polred(2 * x + 1, 1), '[x - 1]')
        self.assertEquals(pari.polred(4 * x ** 2 + 1, 2), '[1, x-1; 2*x, x^2+1]')
        self.assertEquals(pari.polredbest(2 * x + 1), 'x + 1')
        self.assertEquals(pari.polredbest(2 * x + 1, 1), '[x + 1, Mod(-1/2, x + 1)]')
        self.assertEquals(pari.polredbest(4 * x ** 2 + 1, 1), '[x^2 + 1, Mod(1/2*x, x^2 + 1)]')
        self.assertEquals(pari.polredord(2 * x + 1), '[2*x + 1]')
        self.assertEquals(pari.polredord(4 * x ** 2 + 1), '[x - 1, x^2 + 1]')
        # len(1519), test T->unscale != 1
        self.assertEquals(pari.polredbest(
            x ** 8 + 24 * x ** 6 + 80 * x ** 5 + 1040 * x ** 4 - 4288 * x ** 3 - 12736 * x ** 2 - 61952 * x + 311296,
            1),
            '[x^8 - 4*x^7 + 24*x^6 - 58*x^5 + 126*x^4 - 160*x^3 + 160*x^2 - 89*x + 26, Mod(-68/135*x^' +
            '7 + 208/135*x^6 - 1378/135*x^5 + 56/3*x^4 - 194/5*x^3 + 4976/135*x^2 - 4492/135*x + 1856' +
            '/135, x^8 - 4*x^7 + 24*x^6 - 58*x^5 + 126*x^4 - 160*x^3 + 160*x^2 - 89*x + 26)]')
        # #1511
        self.assertEquals(pari.polredabs(
            x ** 16 - 4 * x ** 15 - 334 * x ** 14 + 264 * x ** 13 + 32231 * x ** 12 + 57392 * x ** 11 - 1031422 * x
            ** 10 - 3628868 * x ** 9 + 7185297 * x ** 8 + 42417784 * x ** 7 + 11283472 * x ** 6 - 137773504 * x ** 5
            - 127243504 * x ** 4 + 69059728 * x ** 3 + 56307944 * x ** 2 - 6264432 * x + 6436),
            'x^16 - 4*x^15 - 334*x^14 + 264*x^13 + 32231*x^12 + 57392*x^11 - 1031422*x^10 - 3628868*x' +
            '^9 + 7185297*x^8 + 42417784*x^7 + 11283472*x^6 - 137773504*x^5 - 127243504*x^4 + 6905972' +
            '8*x^3 + 56307944*x^2 - 6264432*x + 6436')
        # #1653
        # pari.default(parisize, 3 << 23);
        f = x ** 40 + 10 * x ** 39 + 75 * x ** 38 + 410 * x ** 37 + 1888 * x ** 36 + 7364 * x ** 35 + 25310 * x ** 34 \
            + 77140 * x ** 33 + 211669 * x ** 32 + 524946 * x ** 31 + 1183823 * x ** 30 + 2430610 * x ** 29 + 4548530 \
                                                                                                              * x ** \
                                                                                                                28 + \
            7743916 * x ** 27 + 11954920 * x ** 26 + 16627228 * x ** 25 + 20626386 * x ** 24 + 22445616 * x ** 23 + \
            20835590 * x ** 22 + 15611648 * x ** 21 + 8209812 * x ** 20 + 1290846 * x ** 19 - 2562740 * x ** 18 - \
            2525172 * x ** 17 - 76374 * x ** 16 + 2095346 * x ** 15 + 2320830 * x ** 14 + 1050748 * x ** 13 - 71120 * \
                                                                                                              x ** 12 \
            - 238080 * x ** 11 + 31952 * x ** 10 + 106808 * x ** 9 + 12549 * x ** 8 - 18470 * x ** 7 - 485 * x ** 6 + \
            3202 * x ** 5 - 232 * x ** 4 - 430 * x ** 3 + 150 * x ** 2 - 20 * x + 1;
        pari.polredbest(f);
        self.assertEquals(pari.polredabs(
            x ** 5 - 331137220 * x ** 4 + 37922047405356360 * x ** 3 - 1127174691845938128093840 * x ** 2 +
            52208293424667465123438066822480 * x - 16507431553557006099641796204889368224), 'x^5 + 5*x - 1')

        f = 5 * x ** 12 + 13 * x ** 4 + 11 * x ** 3 + 2 * x + 1;
        [g, h] = pari.polredabs(f, 1);
        self.assertEquals(g, 'x^12 - 2*x^11 - 11*x^9 + 13*x^8 + 5')
        self.assertEquals(pari.subst(f, x, h), 'Mod(0, x^12 - 2*x^11 - 11*x^9 + 13*x^8 + 5)')

"""**** Original expected results ****

x^7 + Mod(7*y, y^2 - y - 1)*x^6 + Mod(21*y + 7, y^2 - y - 1)*x^5 + 35*x^4 + 
Mod(-35*y - 14, y^2 - y - 1)*x^3 + Mod(-7*y - 77, y^2 - y - 1)*x^2 + Mod(14*
y + 7, y^2 - y - 1)*x + Mod(-y + 44, y^2 - y - 1)
x^8 + Mod(-5265231366756*y - 11544453645457, y^2 - y - 7)*x^7 + Mod(28411458
5416607426786*y + 622944640581258439174, y^2 - y - 7)*x^6 + Mod(-88698486784
831757442657946*y - 194478741347464554095950854, y^2 - y - 7)*x^5 + Mod(1457
861838374320941446687517087*y + 3196482213651741289611519839129, y^2 - y - 7
)*x^4 + Mod(-3466536016262523445329224834043387*y - 760066587058933027706659
6588522840, y^2 - y - 7)*x^3 + Mod(500059251848756466420835983321373618*y + 
1096421116344588264250099626740668170, y^2 - y - 7)*x^2 + Mod(-1916208944621
5341153510282273347908836*y - 42014460135353505823787366140454468112, y^2 - 
y - 7)*x + Mod(100691810991091652032034511974871062155*y + 22077509296238717
8747302102119022589688, y^2 - y - 7)
x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mo
d(-385*y - 251, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(
-2451*y - 3350, y^2 - y - 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod
(-2050*y - 3861, y^2 - y - 7)*x + Mod(565*y + 1331, y^2 - y - 7)
x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mo
d(-385*y - 251, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(
-2451*y - 3350, y^2 - y - 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod
(-2050*y - 3861, y^2 - y - 7)*x + Mod(565*y + 1331, y^2 - y - 7)
x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mo
d(-385*y - 251, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(
-2451*y - 3350, y^2 - y - 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod
(-2050*y - 3861, y^2 - y - 7)*x + Mod(565*y + 1331, y^2 - y - 7)
x^8 + Mod(-8*y + 1, y^2 - y - 7)*x^7 + Mod(21*y + 189, y^2 - y - 7)*x^6 + Mo
d(-385*y - 251, y^2 - y - 7)*x^5 + Mod(695*y + 2955, y^2 - y - 7)*x^4 + Mod(
-2451*y - 3350, y^2 - y - 7)*x^3 + Mod(2402*y + 6871, y^2 - y - 7)*x^2 + Mod
(-2050*y - 3861, y^2 - y - 7)*x + Mod(565*y + 1331, y^2 - y - 7)
x^3 + Mod(y^2 - 2, y^3 - y - 1)*x^2 + Mod(-y + 1, y^3 - y - 1)*x + Mod(y - 1
, y^3 - y - 1)
x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1
Mod(0, x^3 + Mod(y^2 - y - 2, y^3 - y - 1)*x^2 + Mod(-y^2 + y + 1, y^3 - y -
 1)*x + Mod(y^2, y^3 - y - 1))
Mod(0, x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1)
Mod(0, x^9 - 4*x^8 + 8*x^7 - 9*x^6 + 7*x^5 - 3*x^4 - x^3 + 4*x^2 - 3*x + 1)
  *** nfinit: Warning: non-monic polynomial. Result of the form [nf,c].
x^2 - 3646554366
304
x^4 + 1000000000000000000000*x^2 + 1
x^4 + 146077*x^2 + 2629386
x^9 - 4*x^7 - 3*x^6 + 9*x^5 + 8*x^4 - 6*x^3 - 9*x^2 - 4*x - 1
x^5 - 13*x^3 - 3*x^2 + 5*x + 1
x^6 + 21471450*x^2 + 71643071500
x^6 - 12*x^4 - 24*x^3 + 21651666*x^2 - 257657256*x + 71814482884
x^4 + 146077*x^2 + 10517544
x
[x, Mod(-1/2, x)]
  ***   at top-level: polred([x,[1]])
  ***                 ^---------------
  *** polred: domain error in gvaluation: p = 1
[x - 1]
[x - 1]

[  1   x - 1]

[2*x x^2 + 1]

x + 1
[x + 1, Mod(-1/2, x + 1)]
[x^2 + 1, Mod(1/2*x, x^2 + 1)]
[2*x + 1]
[x - 1, x^2 + 1]
[x^8 - 4*x^7 + 24*x^6 - 58*x^5 + 126*x^4 - 160*x^3 + 160*x^2 - 89*x + 26, Mo
d(-68/135*x^7 + 208/135*x^6 - 1378/135*x^5 + 56/3*x^4 - 194/5*x^3 + 4976/135
*x^2 - 4492/135*x + 1856/135, x^8 - 4*x^7 + 24*x^6 - 58*x^5 + 126*x^4 - 160*
x^3 + 160*x^2 - 89*x + 26)]
x^16 - 4*x^15 - 334*x^14 + 264*x^13 + 32231*x^12 + 57392*x^11 - 1031422*x^10
 - 3628868*x^9 + 7185297*x^8 + 42417784*x^7 + 11283472*x^6 - 137773504*x^5 -
 127243504*x^4 + 69059728*x^3 + 56307944*x^2 - 6264432*x + 6436
  ***   Warning: new stack size = 25165824 (24.000 Mbytes).
x^5 + 5*x - 1
[x^12 - 2*x^11 - 11*x^9 + 13*x^8 + 5, Mod(0, x^12 - 2*x^11 - 11*x^9 + 13*x^8
 + 5)]

"""
